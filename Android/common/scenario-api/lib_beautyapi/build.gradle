apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'maven-publish'
apply plugin: 'de.undercouch.download'
apply from: 'vendors.gradle'

android {
    namespace 'io.agora.beautyapi'
    compileSdk 33

    defaultConfig {
        minSdk 21
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    api 'com.google.code.gson:gson:2.9.0'

    api project(path: ":common:scenario-api:lib_beautyapi:aars:beauty_sensetime:SenseArSourceManager")
    api project(path: ":common:scenario-api:lib_beautyapi:aars:beauty_sensetime:STMobileJNI")
    api project(path: ":common:scenario-api:lib_beautyapi:aars:beauty_sensetime:HardwareBuffer")
    api project(path: ":common:scenario-api:lib_beautyapi:aars:beauty_bytedance:EffectAAR")
    api('com.faceunity:core:8.7.0') {
        exclude group: 'com.google.android.exoplayer', module: 'exoplayer-core'
    }
    if (BEAUTY_RESOURCE == "") {
        api('com.faceunity:model:8.7.0')
    }

    // rtc
    implementation project(":common:base")
}