// Generated by view binder compiler. Do not edit!
package io.agora.scene.voice.spatial.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.imageview.ShapeableImageView;
import io.agora.scene.voice.spatial.R;
import io.agora.scene.voice.spatial.ui.widget.titlebar.RoomTitleBar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class VoiceSpatialActivityProfileLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ShapeableImageView avatar;

  @NonNull
  public final ConstraintLayout baseLayout;

  @NonNull
  public final LinearLayoutCompat contentLayout;

  @NonNull
  public final ConstraintLayout disclaimerLayout;

  @NonNull
  public final ImageView edit;

  @NonNull
  public final ImageView itemIcon;

  @NonNull
  public final EditText nickName;

  @NonNull
  public final TextView number;

  @NonNull
  public final ConstraintLayout privateLayout;

  @NonNull
  public final RoomTitleBar titleBar;

  private VoiceSpatialActivityProfileLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull ShapeableImageView avatar, @NonNull ConstraintLayout baseLayout,
      @NonNull LinearLayoutCompat contentLayout, @NonNull ConstraintLayout disclaimerLayout,
      @NonNull ImageView edit, @NonNull ImageView itemIcon, @NonNull EditText nickName,
      @NonNull TextView number, @NonNull ConstraintLayout privateLayout,
      @NonNull RoomTitleBar titleBar) {
    this.rootView = rootView;
    this.avatar = avatar;
    this.baseLayout = baseLayout;
    this.contentLayout = contentLayout;
    this.disclaimerLayout = disclaimerLayout;
    this.edit = edit;
    this.itemIcon = itemIcon;
    this.nickName = nickName;
    this.number = number;
    this.privateLayout = privateLayout;
    this.titleBar = titleBar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static VoiceSpatialActivityProfileLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static VoiceSpatialActivityProfileLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.voice_spatial_activity_profile_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static VoiceSpatialActivityProfileLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.avatar;
      ShapeableImageView avatar = ViewBindings.findChildViewById(rootView, id);
      if (avatar == null) {
        break missingId;
      }

      ConstraintLayout baseLayout = (ConstraintLayout) rootView;

      id = R.id.content_layout;
      LinearLayoutCompat contentLayout = ViewBindings.findChildViewById(rootView, id);
      if (contentLayout == null) {
        break missingId;
      }

      id = R.id.disclaimer_layout;
      ConstraintLayout disclaimerLayout = ViewBindings.findChildViewById(rootView, id);
      if (disclaimerLayout == null) {
        break missingId;
      }

      id = R.id.edit;
      ImageView edit = ViewBindings.findChildViewById(rootView, id);
      if (edit == null) {
        break missingId;
      }

      id = R.id.item_icon;
      ImageView itemIcon = ViewBindings.findChildViewById(rootView, id);
      if (itemIcon == null) {
        break missingId;
      }

      id = R.id.nick_name;
      EditText nickName = ViewBindings.findChildViewById(rootView, id);
      if (nickName == null) {
        break missingId;
      }

      id = R.id.number;
      TextView number = ViewBindings.findChildViewById(rootView, id);
      if (number == null) {
        break missingId;
      }

      id = R.id.private_layout;
      ConstraintLayout privateLayout = ViewBindings.findChildViewById(rootView, id);
      if (privateLayout == null) {
        break missingId;
      }

      id = R.id.title_bar;
      RoomTitleBar titleBar = ViewBindings.findChildViewById(rootView, id);
      if (titleBar == null) {
        break missingId;
      }

      return new VoiceSpatialActivityProfileLayoutBinding((ConstraintLayout) rootView, avatar,
          baseLayout, contentLayout, disclaimerLayout, edit, itemIcon, nickName, number,
          privateLayout, titleBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
