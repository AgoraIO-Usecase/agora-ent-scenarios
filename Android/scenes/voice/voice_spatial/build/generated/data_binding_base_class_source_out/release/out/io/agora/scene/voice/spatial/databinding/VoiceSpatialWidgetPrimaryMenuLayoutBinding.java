// Generated by view binder compiler. Do not edit!
package io.agora.scene.voice.spatial.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import io.agora.scene.voice.spatial.R;
import io.agora.scene.voice.spatial.ui.widget.expression.ExpressionView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class VoiceSpatialWidgetPrimaryMenuLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ExpressionView expressionView;

  @NonNull
  public final ImageView iconEmoji;

  @NonNull
  public final ConstraintLayout inputBg;

  @NonNull
  public final AppCompatEditText inputEditView;

  @NonNull
  public final LinearLayoutCompat inputLayout;

  @NonNull
  public final TextView inputSend;

  @NonNull
  public final ConstraintLayout inputView;

  @NonNull
  public final LinearLayoutCompat menuLayout;

  @NonNull
  public final RelativeLayout normalLayout;

  @NonNull
  public final View vKeyboardBg;

  private VoiceSpatialWidgetPrimaryMenuLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull ExpressionView expressionView, @NonNull ImageView iconEmoji,
      @NonNull ConstraintLayout inputBg, @NonNull AppCompatEditText inputEditView,
      @NonNull LinearLayoutCompat inputLayout, @NonNull TextView inputSend,
      @NonNull ConstraintLayout inputView, @NonNull LinearLayoutCompat menuLayout,
      @NonNull RelativeLayout normalLayout, @NonNull View vKeyboardBg) {
    this.rootView = rootView;
    this.expressionView = expressionView;
    this.iconEmoji = iconEmoji;
    this.inputBg = inputBg;
    this.inputEditView = inputEditView;
    this.inputLayout = inputLayout;
    this.inputSend = inputSend;
    this.inputView = inputView;
    this.menuLayout = menuLayout;
    this.normalLayout = normalLayout;
    this.vKeyboardBg = vKeyboardBg;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static VoiceSpatialWidgetPrimaryMenuLayoutBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static VoiceSpatialWidgetPrimaryMenuLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.voice_spatial_widget_primary_menu_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static VoiceSpatialWidgetPrimaryMenuLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.expression_view;
      ExpressionView expressionView = ViewBindings.findChildViewById(rootView, id);
      if (expressionView == null) {
        break missingId;
      }

      id = R.id.icon_emoji;
      ImageView iconEmoji = ViewBindings.findChildViewById(rootView, id);
      if (iconEmoji == null) {
        break missingId;
      }

      id = R.id.input_bg;
      ConstraintLayout inputBg = ViewBindings.findChildViewById(rootView, id);
      if (inputBg == null) {
        break missingId;
      }

      id = R.id.input_edit_view;
      AppCompatEditText inputEditView = ViewBindings.findChildViewById(rootView, id);
      if (inputEditView == null) {
        break missingId;
      }

      id = R.id.input_layout;
      LinearLayoutCompat inputLayout = ViewBindings.findChildViewById(rootView, id);
      if (inputLayout == null) {
        break missingId;
      }

      id = R.id.input_send;
      TextView inputSend = ViewBindings.findChildViewById(rootView, id);
      if (inputSend == null) {
        break missingId;
      }

      id = R.id.input_view;
      ConstraintLayout inputView = ViewBindings.findChildViewById(rootView, id);
      if (inputView == null) {
        break missingId;
      }

      id = R.id.menu_layout;
      LinearLayoutCompat menuLayout = ViewBindings.findChildViewById(rootView, id);
      if (menuLayout == null) {
        break missingId;
      }

      id = R.id.normal_layout;
      RelativeLayout normalLayout = ViewBindings.findChildViewById(rootView, id);
      if (normalLayout == null) {
        break missingId;
      }

      id = R.id.vKeyboardBg;
      View vKeyboardBg = ViewBindings.findChildViewById(rootView, id);
      if (vKeyboardBg == null) {
        break missingId;
      }

      return new VoiceSpatialWidgetPrimaryMenuLayoutBinding((ConstraintLayout) rootView,
          expressionView, iconEmoji, inputBg, inputEditView, inputLayout, inputSend, inputView,
          menuLayout, normalLayout, vKeyboardBg);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
