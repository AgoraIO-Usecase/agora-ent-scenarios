// Generated by view binder compiler. Do not edit!
package io.agora.scene.voice.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import io.agora.scene.voice.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class VoiceFragmentContributionRankingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Guideline glHorizontal20;

  @NonNull
  public final AppCompatImageView ivContributionEmpty;

  @NonNull
  public final MaterialTextView mtContributionEmpty;

  @NonNull
  public final RecyclerView rvContributionRanking;

  @NonNull
  public final SwipeRefreshLayout slContributionRanking;

  private VoiceFragmentContributionRankingBinding(@NonNull ConstraintLayout rootView,
      @NonNull Guideline glHorizontal20, @NonNull AppCompatImageView ivContributionEmpty,
      @NonNull MaterialTextView mtContributionEmpty, @NonNull RecyclerView rvContributionRanking,
      @NonNull SwipeRefreshLayout slContributionRanking) {
    this.rootView = rootView;
    this.glHorizontal20 = glHorizontal20;
    this.ivContributionEmpty = ivContributionEmpty;
    this.mtContributionEmpty = mtContributionEmpty;
    this.rvContributionRanking = rvContributionRanking;
    this.slContributionRanking = slContributionRanking;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static VoiceFragmentContributionRankingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static VoiceFragmentContributionRankingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.voice_fragment_contribution_ranking, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static VoiceFragmentContributionRankingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.glHorizontal20;
      Guideline glHorizontal20 = ViewBindings.findChildViewById(rootView, id);
      if (glHorizontal20 == null) {
        break missingId;
      }

      id = R.id.ivContributionEmpty;
      AppCompatImageView ivContributionEmpty = ViewBindings.findChildViewById(rootView, id);
      if (ivContributionEmpty == null) {
        break missingId;
      }

      id = R.id.mtContributionEmpty;
      MaterialTextView mtContributionEmpty = ViewBindings.findChildViewById(rootView, id);
      if (mtContributionEmpty == null) {
        break missingId;
      }

      id = R.id.rvContributionRanking;
      RecyclerView rvContributionRanking = ViewBindings.findChildViewById(rootView, id);
      if (rvContributionRanking == null) {
        break missingId;
      }

      id = R.id.slContributionRanking;
      SwipeRefreshLayout slContributionRanking = ViewBindings.findChildViewById(rootView, id);
      if (slContributionRanking == null) {
        break missingId;
      }

      return new VoiceFragmentContributionRankingBinding((ConstraintLayout) rootView,
          glHorizontal20, ivContributionEmpty, mtContributionEmpty, rvContributionRanking,
          slContributionRanking);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
