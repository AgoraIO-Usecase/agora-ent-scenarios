// Generated by view binder compiler. Do not edit!
package io.agora.scene.voice.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import io.agora.scene.voice.R;
import io.agora.scene.voice.ui.widget.mic.Room2DMicView;
import io.agora.scene.voice.ui.widget.mic.Room3DMicView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class VoiceViewRoom3dMicLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout cl3DMicLayoutRoot;

  @NonNull
  public final Room2DMicView micV0;

  @NonNull
  public final Room2DMicView micV1;

  @NonNull
  public final Room2DMicView micV2Blue;

  @NonNull
  public final Room2DMicView micV3Red;

  @NonNull
  public final Room3DMicView micV4Center;

  @NonNull
  public final Room2DMicView micV5;

  @NonNull
  public final Room2DMicView micV6;

  private VoiceViewRoom3dMicLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout cl3DMicLayoutRoot, @NonNull Room2DMicView micV0,
      @NonNull Room2DMicView micV1, @NonNull Room2DMicView micV2Blue,
      @NonNull Room2DMicView micV3Red, @NonNull Room3DMicView micV4Center,
      @NonNull Room2DMicView micV5, @NonNull Room2DMicView micV6) {
    this.rootView = rootView;
    this.cl3DMicLayoutRoot = cl3DMicLayoutRoot;
    this.micV0 = micV0;
    this.micV1 = micV1;
    this.micV2Blue = micV2Blue;
    this.micV3Red = micV3Red;
    this.micV4Center = micV4Center;
    this.micV5 = micV5;
    this.micV6 = micV6;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static VoiceViewRoom3dMicLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static VoiceViewRoom3dMicLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.voice_view_room_3d_mic_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static VoiceViewRoom3dMicLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout cl3DMicLayoutRoot = (ConstraintLayout) rootView;

      id = R.id.micV0;
      Room2DMicView micV0 = ViewBindings.findChildViewById(rootView, id);
      if (micV0 == null) {
        break missingId;
      }

      id = R.id.micV1;
      Room2DMicView micV1 = ViewBindings.findChildViewById(rootView, id);
      if (micV1 == null) {
        break missingId;
      }

      id = R.id.micV2Blue;
      Room2DMicView micV2Blue = ViewBindings.findChildViewById(rootView, id);
      if (micV2Blue == null) {
        break missingId;
      }

      id = R.id.micV3Red;
      Room2DMicView micV3Red = ViewBindings.findChildViewById(rootView, id);
      if (micV3Red == null) {
        break missingId;
      }

      id = R.id.micV4Center;
      Room3DMicView micV4Center = ViewBindings.findChildViewById(rootView, id);
      if (micV4Center == null) {
        break missingId;
      }

      id = R.id.micV5;
      Room2DMicView micV5 = ViewBindings.findChildViewById(rootView, id);
      if (micV5 == null) {
        break missingId;
      }

      id = R.id.micV6;
      Room2DMicView micV6 = ViewBindings.findChildViewById(rootView, id);
      if (micV6 == null) {
        break missingId;
      }

      return new VoiceViewRoom3dMicLayoutBinding((ConstraintLayout) rootView, cl3DMicLayoutRoot,
          micV0, micV1, micV2Blue, micV3Red, micV4Center, micV5, micV6);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
