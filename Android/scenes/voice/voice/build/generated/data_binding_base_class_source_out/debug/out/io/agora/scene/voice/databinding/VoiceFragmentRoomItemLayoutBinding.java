// Generated by view binder compiler. Do not edit!
package io.agora.scene.voice.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.imageview.ShapeableImageView;
import io.agora.scene.voice.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class VoiceFragmentRoomItemLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView enter;

  @NonNull
  public final Guideline gl45;

  @NonNull
  public final ShapeableImageView iconCount;

  @NonNull
  public final ConstraintLayout iconCountLayout;

  @NonNull
  public final ImageView iconPrivate;

  @NonNull
  public final ShapeableImageView ownerAvatar;

  @NonNull
  public final TextView ownerName;

  @NonNull
  public final TextView privateTitle;

  @NonNull
  public final TextView roomCount;

  @NonNull
  public final ConstraintLayout roomItemLayout;

  @NonNull
  public final TextView roomName;

  @NonNull
  public final ConstraintLayout roomTitleLayout;

  @NonNull
  public final ConstraintLayout title1;

  private VoiceFragmentRoomItemLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView enter, @NonNull Guideline gl45, @NonNull ShapeableImageView iconCount,
      @NonNull ConstraintLayout iconCountLayout, @NonNull ImageView iconPrivate,
      @NonNull ShapeableImageView ownerAvatar, @NonNull TextView ownerName,
      @NonNull TextView privateTitle, @NonNull TextView roomCount,
      @NonNull ConstraintLayout roomItemLayout, @NonNull TextView roomName,
      @NonNull ConstraintLayout roomTitleLayout, @NonNull ConstraintLayout title1) {
    this.rootView = rootView;
    this.enter = enter;
    this.gl45 = gl45;
    this.iconCount = iconCount;
    this.iconCountLayout = iconCountLayout;
    this.iconPrivate = iconPrivate;
    this.ownerAvatar = ownerAvatar;
    this.ownerName = ownerName;
    this.privateTitle = privateTitle;
    this.roomCount = roomCount;
    this.roomItemLayout = roomItemLayout;
    this.roomName = roomName;
    this.roomTitleLayout = roomTitleLayout;
    this.title1 = title1;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static VoiceFragmentRoomItemLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static VoiceFragmentRoomItemLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.voice_fragment_room_item_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static VoiceFragmentRoomItemLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.enter;
      TextView enter = ViewBindings.findChildViewById(rootView, id);
      if (enter == null) {
        break missingId;
      }

      id = R.id.gl45;
      Guideline gl45 = ViewBindings.findChildViewById(rootView, id);
      if (gl45 == null) {
        break missingId;
      }

      id = R.id.icon_count;
      ShapeableImageView iconCount = ViewBindings.findChildViewById(rootView, id);
      if (iconCount == null) {
        break missingId;
      }

      id = R.id.icon_count_layout;
      ConstraintLayout iconCountLayout = ViewBindings.findChildViewById(rootView, id);
      if (iconCountLayout == null) {
        break missingId;
      }

      id = R.id.icon_private;
      ImageView iconPrivate = ViewBindings.findChildViewById(rootView, id);
      if (iconPrivate == null) {
        break missingId;
      }

      id = R.id.owner_avatar;
      ShapeableImageView ownerAvatar = ViewBindings.findChildViewById(rootView, id);
      if (ownerAvatar == null) {
        break missingId;
      }

      id = R.id.owner_name;
      TextView ownerName = ViewBindings.findChildViewById(rootView, id);
      if (ownerName == null) {
        break missingId;
      }

      id = R.id.private_title;
      TextView privateTitle = ViewBindings.findChildViewById(rootView, id);
      if (privateTitle == null) {
        break missingId;
      }

      id = R.id.room_count;
      TextView roomCount = ViewBindings.findChildViewById(rootView, id);
      if (roomCount == null) {
        break missingId;
      }

      id = R.id.room_item_layout;
      ConstraintLayout roomItemLayout = ViewBindings.findChildViewById(rootView, id);
      if (roomItemLayout == null) {
        break missingId;
      }

      id = R.id.room_name;
      TextView roomName = ViewBindings.findChildViewById(rootView, id);
      if (roomName == null) {
        break missingId;
      }

      id = R.id.room_title_layout;
      ConstraintLayout roomTitleLayout = ViewBindings.findChildViewById(rootView, id);
      if (roomTitleLayout == null) {
        break missingId;
      }

      id = R.id.title1;
      ConstraintLayout title1 = ViewBindings.findChildViewById(rootView, id);
      if (title1 == null) {
        break missingId;
      }

      return new VoiceFragmentRoomItemLayoutBinding((ConstraintLayout) rootView, enter, gl45,
          iconCount, iconCountLayout, iconPrivate, ownerAvatar, ownerName, privateTitle, roomCount,
          roomItemLayout, roomName, roomTitleLayout, title1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
